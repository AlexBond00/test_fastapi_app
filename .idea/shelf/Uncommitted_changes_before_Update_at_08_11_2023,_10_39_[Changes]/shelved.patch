Index: fastapi_app/frontend/front_api.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import asyncio\nimport json\nimport uvicorn\n\nfrom fastapi import FastAPI, Request\nfrom fastapi.responses import HTMLResponse\nfrom fastapi.staticfiles import StaticFiles\nfrom fastapi.templating import Jinja2Templates\n\nfrom tortoise import Tortoise\n\nfrom message_model import MessageModel\n\n\nasync def init_tortoise():\n    with open(\"db_config.json\") as f:\n        json_data = json.load(f)\n\n    await Tortoise.init(\n        config=json_data,\n        use_tz=True\n    )\n    await Tortoise.generate_schemas(safe=True)\n\n\napp = FastAPI()\n\napp.mount(\"/static\", StaticFiles(directory=\"static\", html=True), name=\"static\")\n\n\ntemplates = Jinja2Templates(directory=\"templates\")\n\n\n@app.get(\"/messages\", response_class=HTMLResponse)\nasync def read_item(request: Request):\n    records_message: list[MessageModel] = await MessageModel.all()\n    dialog_list = set()\n    for record in records_message:\n        dialog_list.add(record.chat_id)\n\n    print(dialog_list)\n    return templates.TemplateResponse(\"index.html\", {\"request\": request, \"dialog_list\": dialog_list})\n\n\n@app.get(\"/dialog/{chat_id}\", response_class=HTMLResponse)\nasync def read_item(request: Request, chat_id):\n    records_message: list[MessageModel] = await MessageModel.filter(chat_id=chat_id).all()\n    print(records_message)\n    return templates.TemplateResponse(\"chat.html\", {\"request\": request, \"records_message\": records_message})\n\n\n\nasync def main():\n    await init_tortoise()\n    config = uvicorn.Config(\"app:app\", port=8080)\n    server = uvicorn.Server(config)\n    await server.serve()\n\nif __name__ == \"__main__\":\n    asyncio.run(main())\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/fastapi_app/frontend/front_api.py b/fastapi_app/frontend/front_api.py
--- a/fastapi_app/frontend/front_api.py	(revision 01da089f4885d6b68e0e83f0ee547252b3986a47)
+++ b/fastapi_app/frontend/front_api.py	(date 1699428983510)
@@ -9,7 +9,7 @@
 
 from tortoise import Tortoise
 
-from message_model import MessageModel
+from fastapi_app.message_model import MessageModel
 
 
 async def init_tortoise():
Index: fastapi_app/db_config.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>{\n  \"connections\": {\n    \"test_connection\": {\n      \"engine\": \"tortoise.backends.asyncpg\",\n      \"credentials\": {\n        \"host\": \"209.250.251.40\",\n        \"port\": \"5432\",\n        \"user\": \"postgres\",\n        \"password\": \"postgres\",\n        \"database\": \"postgres\",\n        \"schema\": \"public\"\n      }\n    }\n  },\n  \"apps\": {\n    \"test_app\": {\n      \"models\": [\n        \"message_model\",\n        \"dialogue_model\"\n      ],\n      \"default_connection\": \"test_connection\"\n    }\n  }\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/fastapi_app/db_config.json b/fastapi_app/db_config.json
--- a/fastapi_app/db_config.json	(revision 01da089f4885d6b68e0e83f0ee547252b3986a47)
+++ b/fastapi_app/db_config.json	(date 1699429046845)
@@ -6,7 +6,7 @@
         "host": "209.250.251.40",
         "port": "5432",
         "user": "postgres",
-        "password": "postgres",
+        "password": "hellohello",
         "database": "postgres",
         "schema": "public"
       }
